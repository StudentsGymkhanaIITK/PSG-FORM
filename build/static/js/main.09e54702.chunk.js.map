{"version":3,"sources":["components/Navbar.js","history.js","Form/FormInput.js","Form/Form.js","Routes.js","reducers/lostfound.js","reducers/announce.js","reducers/index.js","actions/types.js","store.js","App.js","index.js"],"names":["Navigation","ref","this","wrapperRef","bg","className","variant","Brand","href","Component","withRouter","history","FormInput","onChange","e","setState","target","name","value","type","required","Form","props","context","state","email","message","position","subject","post","input","captchState","onLoadRecaptcha","bind","verifyCallback","handleInputChange","event","captchaDemo","console","log","reset","recaptchaToken","action","placeholder","defaultValue","rows","el","size","data-theme","render","sitekey","onloadCallback","hidden","Button","id","disabled","Routes","path","exact","component","initialState","lostfound","announce","combineReducers","payload","filter","option","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09e54702.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router\";\nimport \"./Navbar.css\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nexport class Navigation extends Component {\n  render() {\n    return (\n      <Navbar\n        ref={this.wrapperRef}\n        bg=\"primary\"\n        className=\"width\"\n        variant=\"dark\"\n      >\n        <Navbar.Brand href=\"/\">President Query Form</Navbar.Brand>\n      </Navbar>\n    );\n  }\n}\n\nexport default withRouter(Navigation);\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React, { Component } from \"react\";\n\nclass FormInput extends Component {\n  onChange = (e) =>\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  render() {\n    return (\n      <div>\n        <div className=\"form-group\">\n          <label>Other *</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"entry.770045899\"\n            onChange={this.onChange}\n            required\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormInput;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport FormInput from \"./FormInput\";\nimport emailjs from \"emailjs-com\";\nimport { loadReCaptcha } from \"react-recaptcha-google\";\nimport { ReCaptcha } from \"react-recaptcha-google\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass Form extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      position: \"\",\n      subject: \"\",\n      post: null,\n      input: false,\n      captchState: false,\n    };\n\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      post: event.target.value,\n    });\n  }\n\n  componentDidMount() {\n    // loadReCaptcha();\n    if (this.captchaDemo) {\n      console.log(\"started, just a second...\");\n      this.captchaDemo.reset();\n    }\n  }\n\n  onLoadRecaptcha() {\n    if (this.captchaDemo) {\n      this.captchaDemo.reset();\n    }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // Here you will get the final recaptchaToken!!!\n    // console.log(recaptchaToken, \"<= your recaptcha token\");\n    this.setState({ captchState: true });\n  }\n\n  onChange = (e) =>\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n\n  // onSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(this.state);\n\n  //   emailjs\n  //     .sendForm(\n  //       \"service_867xail\",\n  //       \"template_4na6805\",\n  //       e.target,\n  //       \"user_9w8HEuc0pq4mgpJRQZZFa\"\n  //     )\n  //     .then(\n  //       (result) => {\n  //         console.log(result.text);\n  //       },\n  //       (error) => {\n  //         console.log(error.text);\n  //       }\n  //     );\n  //   e.target.reset();\n  // };\n\n  render() {\n    return (\n      <div className=\"col-sm-9 col-lg-6 m-auto\">\n        <div className=\"card card-body mt-4 mb-4 \">\n          {/* <h2>Ask The Hab</h2> */}\n\n          <form action=\"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfdqLfhF5Z2-fvUpf_zkwk8b_p7ZvndJFEJ105rd1wk5-4aoA/formResponse\">\n            <div className=\"form-group mt-3\">\n              <label>Name *</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"entry.386602193\"\n                onChange={this.onChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mt-3\">\n              <label>Roll Number *</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                name=\"entry.2071498520\"\n                onChange={this.onChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email *</label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"entry.1660967211\"\n                onChange={this.onChange}\n                placeholder=\"IITK Email Address Only\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>What do you want to ask ? *</label>\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  name=\"entry.2119653361\"\n                  onChange={this.handleInputChange}\n                >\n                  <option defaultValue>What do you want to Ask ? *</option>\n                  <option value=\"Academic Affairs for Undergraduate Students\">\n                    Academic Affairs for Undergraduate Students\n                  </option>\n                  <option value=\"Academic Affairs for Postgraduate Students\">\n                    Academic Affairs for Postgraduate Students\n                  </option>\n                  <option value=\"Campus Culture in General (e.g.: Gender sensitivity, Senior-Junior interaction, Security related, etc.)\">\n                    Campus Culture in General\n                  </option>\n                  <option value=\"Commercial Establishments (Food Outlets, Shops etc.)\">\n                    Commercial Establishments\n                  </option>\n                  <option value=\"Cells (Community Welfare, Entrepreneurship, Election Commission, Outreach, Vox Populi)\">\n                    Cells\n                  </option>\n                  <option value=\"Councils (Academics and Career Council, Games and Sports Council, Media and Cultural Council, Science and Technology Council)\">\n                    Councils\n                  </option>\n                  <option value=\"Festivals (Antaragni, Techkriti, Udghosh)\">\n                    Festivals\n                  </option>\n                  <option value=\"General Championship (Galaxy, Takneek, Inferno)\">\n                    General Championship\n                  </option>\n                  <option value=\"Grievance Redressal by the Institute Administration\">\n                    Grievance Redressal by the Institute Administration\n                  </option>\n                  <option value=\"Hostel Affairs\">Hostel Affairs</option>\n                  <option value=\"Old SAC/New SAC related affairs\">\n                    Old SAC/New SAC related affairs\n                  </option>\n                  <option value=\"Other infrastructures (Health Centre, Library, Visitors Hostel and allied facilities, etc)\">\n                    Other infrastructures\n                  </option>\n                  <option value=\"Placements\">Placements</option>\n                  <option value=\"Students' Senate\">Students' Senate</option>\n                  <option value=\"Other:\">Other</option>\n                </select>\n              </div>\n            </div>\n\n            {this.state.post == \"Other:\" ? <FormInput /> : console.log(\"Failed\")}\n\n            <div className=\"form-group mt-3\">\n              <label>Feedback *</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"entry.1454249708\"\n                onChange={this.onChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mt-3\">\n              <label>Suggestions For Improvement *</label>\n              <textarea\n                className=\"form-control\"\n                type=\"text\"\n                name=\"entry.228886821\"\n                onChange={this.onChange}\n                rows=\"5\"\n                required\n              />\n            </div>\n\n            <ReCaptcha\n              ref={(el) => {\n                this.captchaDemo = el;\n              }}\n              size=\"normal\"\n              data-theme=\"dark\"\n              render=\"explicit\"\n              sitekey=\"6Lep4-0ZAAAAAJFKZ-LKTv5tgz8dqQJjsylfJhnW\"\n              onloadCallback={this.onLoadRecaptcha}\n              verifyCallback={this.verifyCallback}\n            />\n            <ReCAPTCHA\n              hidden\n              sitekey=\"6LcmsesZAAAAAEJ9b7FBvTj3-kztxDSlxKbCKHEG\"\n            />\n\n            {this.state.captchState ? (\n              <div className=\"form-group\">\n                <Button\n                  type=\"submit\"\n                  id=\"submit-btn\"\n                  className=\"btn btn-primary\"\n                >\n                  Submit\n                </Button>\n              </div>\n            ) : (\n              <div className=\"form-group\">\n                <Button\n                  type=\"submit\"\n                  id=\"submit-btn\"\n                  disabled\n                  className=\"btn btn-primary\"\n                >\n                  Submit\n                </Button>\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n\n// import React, { Component } from 'react';\n// import { ReCaptcha } from 'react-recaptcha-google'\n// class ExampleComponent extends Component {\n//   constructor(props, context) {\n//     super(props, context);\n//     this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n//     this.verifyCallback = this.verifyCallback.bind(this);\n//   }\n//   componentDidMount() {\n//     if (this.captchaDemo) {\n//         console.log(\"started, just a second...\")\n//         this.captchaDemo.reset();\n//     }\n//   }\n//   onLoadRecaptcha() {\n//       if (this.captchaDemo) {\n//           this.captchaDemo.reset();\n//       }\n//   }\n//   verifyCallback(recaptchaToken) {\n//     // Here you will get the final recaptchaToken!!!\n//     console.log(recaptchaToken, \"<= your recaptcha token\")\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {/* You can replace captchaDemo with any ref word */}\n//         <ReCaptcha\n//             ref={(el) => {this.captchaDemo = el;}}\n//             size=\"normal\"\n//             data-theme=\"dark\"\n//             render=\"explicit\"\n//             sitekey=\"6LcmsesZAAAAAEJ9b7FBvTj3-kztxDSlxKbCKHEG\"\n//             onloadCallback={this.onLoadRecaptcha}\n//             verifyCallback={this.verifyCallback}\n//         />\n//         <code>\n//           1. Add <strong>your site key</strong> in the ReCaptcha component. <br/>\n//           2. Check <strong>console</strong> to see the token.\n//         </code>\n//       </div>\n//     );\n//   };\n// };\n// export default ExampleComponent;\n","import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from \"./history\";\nimport Form from \"./Form/Form\";\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" exact component={Form} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","import {ADD_LOSTFOUND, GET_LOSTITEMS, GET_FOUNDITEMS} from '../actions/types.js';\n\n\nconst initialState = {\n    lostfound : []\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_LOSTFOUND:\n            return {\n                ...state,\n                lostfound : [...state.lostfound, action.payload]\n            };\n        case GET_LOSTITEMS:\n            return {\n                ...state,    \n                lostfound: state.lostfound.filter(lostfound => lostfound.option === \"lost\")\n            };\n        case GET_FOUNDITEMS:\n            return {\n                ...state,    \n                lostfound: state.lostfound.filter(lostfound => lostfound.option === \"found\")\n            };\n        default:\n            return state;\n    }\n}","import {ADD_ANNOUNCE, GET_ANNOUNCE} from '../actions/types.js';\n\n\nconst initialState = {\n    announce : []\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_ANNOUNCE:\n            return {\n                ...state,\n                announce : [...state.announce, action.payload]\n            };\n        case GET_ANNOUNCE:\n            return {\n                ...state,    \n                announce: state.announce\n            };\n        \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport lostfound from \"./lostfound\";\nimport announce from \"./announce\";\n\nexport default combineReducers({\n    lostfound,\n    announce\n});\n","export const ADD_LOSTFOUND= \"ADD_LOSTFOUND\";\nexport const GET_LOSTITEMS= \"GET_LOSTITEMS\";\nexport const GET_FOUNDITEMS= \"GET_FOUNDITEMS\";\nexport const ADD_ANNOUNCE= \"ADD_ANNOUNCE\";\nexport const GET_ANNOUNCE= \"GET_ANNOUNCE\";","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navbar\";\nimport Routes from \"./Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n  //   <Provider store={store}>\n  //     <Fragment>\n        <div className=\"App\" >\n          <Navigation />\n          <Routes />\n        </div>\n    //   {/* </Fragment>\n    // </Provider> */}\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nimport App from './App';\n\nReactDOM.render(    \n    <Router> \n        <App />\n    </Router>,\n    document.getElementById('root')\n    );\n\n"],"sourceRoot":""}